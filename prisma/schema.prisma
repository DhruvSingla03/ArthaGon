// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  id          String        @id @default(cuid())
  name        String
  price       Float
  type        String        @default("NA")
  quantity    Float         @default(0.0)
  business    Business      @relation(fields: [businessId], references: [id])
  businessId  String
  Rating_Item Item_Rating[]
  Transaction Transaction[]
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          Role      @default(business)

  Business   Business? @relation(fields: [businessId], references: [id], onDelete: SetNull)
  businessId String?

  Customer   Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)
  customerId String?
}

model Business {
  id              String            @id @default(cuid())
  name            String
  // user User @relation(fields: [userId], references: [id])
  userId          String
  items           Item[]
  rating          Int?
  Business_Rating Business_Rating[]
  Transaction     Transaction[]
  User            User[]
}

model Customer {
  id              String            @id @default(cuid())
  name            String
  // user User @relation(fields: [userId], references: [id])
  userId          String
  rating          Int?
  Item_Rating     Item_Rating[]
  Business_Rating Business_Rating[]
  User            User[]
}

model Item_Rating {
  id            String   @id @default(cuid())
  item          Item     @relation(fields: [rated_item_id], references: [id])
  rated_item_id String
  customer      Customer @relation(fields: [custId], references: [id])
  custId        String
  rating        Int
}

model Business_Rating {
  id                String   @id @default(cuid())
  business          Business @relation(fields: [rated_business_id], references: [id])
  rated_business_id String
  customer          Customer @relation(fields: [custId], references: [id])
  custId            String
  rating            Int
}

model Transaction {
  id         String   @id @default(cuid())
  business   Business @relation(fields: [businessId], references: [id])
  businessId String
  item       Item     @relation(fields: [item_id], references: [id])
  item_id    String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  business
  customer
}
