import DashBoard from '@/components/dashbord/DashBoard'
import Card from '@/components/customer/Card'
import Container from '@/components/container'
import { Tab } from '@headlessui/react'
import axios from 'axios'
import { getSession, useSession } from 'next-auth/react'
import React, { useEffect, useState } from 'react'
import Head from "next/head";
import Modal from '@/components/dashbord/modals/AddItemModal'
import ItemTable from '@/components/dashbord/table-dash'
import AddItemModal from '@/components/dashbord/modals/AddItemModal'
import EditItemModal from '@/components/dashbord/modals/EditItemModal'
import {PrismaClient} from "@prisma/client"
import { json } from 'stream/consumers'
import { Item } from '@prisma/client'


const prisma = new PrismaClient()

export async function getServerSideProps(context:any){
  const session = await getSession(context)
  const email = session?.user?.email

  const user = await prisma.user.findFirst({
    where: {
      email:email
    }
  })

  if (user?.role === "customer") {
    return {
      redirect: {
          destination: '/',
          permanent:false
          
      }
  }
  }
  console.log(user)
  let items;
  if (user!== null) {
   const businessId :string|undefined = user.businessId?.toString()
    items = await prisma.item.findMany({
     where: {
       businessId:businessId
     }
   })
 
   return{
     props:{
       items: items,
      businessId:businessId
       
     }
  } 
  // console.log(items,"adsfadfafsdfasdfsdaf")


  }
}

function DashIndex({items,businessId}:any) {
  
  console.log(items,"items")
  const [itemID, setItemID]=useState<any>()
  const ChooseItem = (id: any) => {
    setItemID(id)
    findItem()
  }
  const [EditItem, setEditItem]=useState()
  const findItem = () => {
    items.map((item: any) => {
      if (item.id === itemID) {
        console.log(item,"this is the item")
        setEditItem(item)
      }
    })
  }

  useEffect(() => {
    
  console.log("adsf")
   
  }, [EditItem])
  

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DashBoard>
        <div className='flex justify-between'>
        {/* <Card></Card> */}
        </div>

        <AddItemModal businessId={businessId} />
        <ItemTable items={items} ChooseItem={ChooseItem}  />

        <EditItemModal item={EditItem} />


      </DashBoard>

      
    </>
  );

}

export default DashIndex